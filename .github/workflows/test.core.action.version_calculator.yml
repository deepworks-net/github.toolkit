# .github/workflows/test.core.action.version_calculator.yml
name: Test Core Action - Version Calculator

on:
  pull_request:
    paths:
      - 'actions/core/version_calculator/**'
      - '.github/workflows/core.action.version_calculator.yml'
      - '.github/workflows/test.core.action.version_calculator.yml'
  workflow_dispatch:

jobs:
  test-no-tags:
    name: Test Default Version (No Tags)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Clean Local Environment
        run: |
          git config --global user.email "test@github.com"
          git config --global user.name "Test User"
          # Delete only local tags
          git tag -l | xargs -r git tag -d
      
      - name: Test Version Calculator
        id: version
        uses: ./actions/core/version_calculator
        with:
          default_version: 'v0.1.0'

      - name: Verify Output Existence
        run: |
          # Check if outputs exist
          if [[ -z "${{ steps.version.outputs.next_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.current_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.commit_count }}" ]]; then
            echo "Missing required outputs"
            exit 1
          fi
      
      - name: Verify Output Value
        run: |
          if [[ "${{ steps.version.outputs.next_version }}" != "v0.1.0" ]]; then
            echo "Expected v0.1.0, got ${{ steps.version.outputs.next_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.current_version }}" != "v0.1.0" ]]; then
            echo "Expected current_version v0.1.0, got ${{ steps.version.outputs.current_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.commit_count }}" != "0" ]]; then
            echo "Expected commit_count 0, got ${{ steps.version.outputs.commit_count }}"
            exit 1
          fi

  test-with-tag:
    name: Test Version Calculation (With Tag)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Clean Local Environment
        run: |
          git config --global user.email "test@github.com"
          git config --global user.name "Test User"
          git tag -l | xargs -r git tag -d
      
      - name: Create Test State
        run: |
          git tag v1.0.0
          git commit --allow-empty -m "test commit 1"
          git commit --allow-empty -m "test commit 2"
      
      - name: Test Version Calculator
        id: version
        uses: ./actions/core/version_calculator
    
      - name: Verify Output Existence
        run: |
          # Check if outputs exist
          if [[ -z "${{ steps.version.outputs.next_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.current_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.commit_count }}" ]]; then
            echo "Missing required outputs"
            exit 1
          fi
      
      - name: Verify Output Value
        run: |
          if [[ "${{ steps.version.outputs.next_version }}" != "v1.0.2" ]]; then
            echo "Expected v1.0.2 (due to 2 commits), got ${{ steps.version.outputs.next_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.current_version }}" != "v1.0.0" ]]; then
            echo "Expected current_version v1.0.0, got ${{ steps.version.outputs.current_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.commit_count }}" != "2" ]]; then
            echo "Expected commit_count 2, got ${{ steps.version.outputs.commit_count }}"
            exit 1
          fi

  test-custom-prefix:
    name: Test Custom Version Prefix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Clean Local Environment
        run: |
          git config --global user.email "test@github.com"
          git config --global user.name "Test User"
          git tag -l | xargs -r git tag -d
      
      - name: Create Test State
        run: |
          git tag ver1.0.0
          git commit --allow-empty -m "test commit"
      
      - name: Test Version Calculator
        id: version
        uses: ./actions/core/version_calculator
        with:
          default_version: 'ver0.1.0'
          version_prefix: 'ver'
          tag_pattern: 'ver*'

      - name: Verify Output Existence
        run: |
          # Check if output exist
          if [[ -z "${{ steps.version.outputs.next_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.current_version }}" ]] || \
            [[ -z "${{ steps.version.outputs.commit_count }}" ]]; then
            echo "Missing required outputs"
            exit 1
          fi
      
      - name: Verify Output Value
        run: |
          if [[ "${{ steps.version.outputs.next_version }}" != "ver1.0.1" ]]; then
            echo "Expected ver1.0.1, got ${{ steps.version.outputs.next_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.current_version }}" != "ver1.0.0" ]]; then
            echo "Expected current_version ver1.0.0, got ${{ steps.version.outputs.current_version }}"
            exit 1
          fi
          if [[ "${{ steps.version.outputs.commit_count }}" != "1" ]]; then
            echo "Expected commit_count 1, got ${{ steps.version.outputs.commit_count }}"
            exit 1
          fi
          
  test-all-outputs:
    name: Test All Outputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Clean Local Environment
        run: |
          git config --global user.email "test@github.com"
          git config --global user.name "Test User"
          git tag -l | xargs -r git tag -d
      
      - name: Create Test State
        run: |
          git tag v0.1.0
          git commit --allow-empty -m "test commit"
      
      - name: Test Version Calculator
        id: version
        uses: ./actions/core/version_calculator
      
      - name: Verify Output Existence
        run: |
            # Check all outputs exist
            if [[ -z "${{ steps.version.outputs.next_version }}" ]] || \
               [[ -z "${{ steps.version.outputs.current_version }}" ]] || \
               [[ -z "${{ steps.version.outputs.commit_count }}" ]]; then
              echo "Missing required outputs"
              exit 1
            fi
            
      - name: Verify Output Values
        run: |
            # Verify values
            if [[ "${{ steps.version.outputs.next_version }}" != "v0.1.1" ]]; then
              echo "Expected next_version v0.1.1, got ${{ steps.version.outputs.next_version }}"
              exit 1
            fi
            if [[ "${{ steps.version.outputs.current_version }}" != "v0.1.0" ]]; then
              echo "Expected current_version v0.1.0, got ${{ steps.version.outputs.current_version }}"
              exit 1
            fi
            if [[ "${{ steps.version.outputs.commit_count }}" != "1" ]]; then
              echo "Expected commit_count 1, got ${{ steps.version.outputs.commit_count }}"
              exit 1
            fi
