# .github/workflows/core.action.manage_release.yml
name: Core - Manage Release

on:
  workflow_dispatch:  # allows manual triggering
  workflow_call:
    inputs:
      github-token:
        required: true
        type: string
        description: "GitHub token for API access"
      operation:
        required: false
        type: string
        default: 'get'
        description: "Operation to perform (draft, get, update)"
      name:
        required: false
        type: string
        default: 'Draft Release'
        description: "Release name for draft operation"
      body:
        required: false
        type: string
        default: ''
        description: "Initial release body for draft operation"
      content:
        required: false
        type: string
        description: "Content for update operation"
      update_mode:
        required: false
        type: string
        default: 'replace'
        description: "How to update content (replace, append, prepend)"
    outputs:
      id:
        description: "Release ID"
        value: ${{ jobs.manage-release.outputs.id }}
      body:
        description: "Release content"
        value: ${{ jobs.manage-release.outputs.body }}
      tag_name:
        description: "Release tag name"
        value: ${{ jobs.manage-release.outputs.tag_name }}
      name:
        description: "Release name"
        value: ${{ jobs.manage-release.outputs.name }}
      exists:
        description: "Whether draft release exists"
        value: ${{ jobs.manage-release.outputs.exists }}

jobs:
  manage-release:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.release.outputs.id }}
      body: ${{ steps.release.outputs.body }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      name: ${{ steps.release.outputs.name }}
      exists: ${{ steps.release.outputs.exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          repository: ${{ github.repository }}  # Ensures the current repository
          ref: main
          fetch-depth: 0
      
      - name: Manage Release
        id: release
        uses: deepworks-net/github.toolkit/actions/core/manage_release@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: ${{ inputs.operation }}
          name: ${{ inputs.name }}
          body: ${{ inputs.body }}
          content: ${{ inputs.content }}
          update_mode: ${{ inputs.update_mode }}