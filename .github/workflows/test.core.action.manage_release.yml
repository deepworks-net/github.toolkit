# .github/workflows/test.core.action.manage_release.yml
name: Test Core Action - Manage Release

on:
  pull_request:
    paths:
      - 'actions/core/manage_release/**'
      - '.github/workflows/core.action.manage_release.yml'
      - '.github/workflows/test.core.action.manage_release.yml'
  workflow_dispatch:

jobs:
  test-draft-operation:
    name: Test Draft Operation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Create Draft Release
        id: draft
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'draft'
          name: 'Test Release'
          body: 'Initial content'
      
      - name: Verify Outputs
        run: |
          if [[ "${{ steps.draft.outputs.exists }}" != "true" ]]; then
            echo "Draft release not created"
            exit 1
          fi
          if [[ -z "${{ steps.draft.outputs.id }}" ]]; then
            echo "Missing release ID"
            exit 1
          fi
          if [[ "${{ steps.draft.outputs.body }}" != "Initial content" ]]; then
            echo "Incorrect release content"
            exit 1
          fi

  test-get-operation:
    name: Test Get Operation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Get Draft Release
        id: get
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'get'
      
      - name: Verify Output Format
        run: |
          if [[ "${{ steps.get.outputs.exists }}" != "true" ]] && [[ "${{ steps.get.outputs.exists }}" != "false" ]]; then
            echo "Invalid exists output"
            exit 1
          fi

  test-update-operation:
    name: Test Update Operation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Create Initial Draft
        id: draft
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'draft'
          body: 'Initial content'
      
      - name: Update Draft - Replace
        id: update-replace
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'update'
          content: 'New content'
          update_mode: 'replace'
      
      - name: Verify Replace
        run: |
          if [[ "${{ steps.update-replace.outputs.body }}" != "New content" ]]; then
            echo "Content not replaced"
            exit 1
          fi
      
      - name: Update Draft - Append
        id: update-append
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'update'
          content: 'Additional content'
          update_mode: 'append'
      
      - name: Verify Append
        run: |
          if [[ "${{ steps.update-append.outputs.body }}" != *"Additional content"* ]]; then
            echo "Content not appended"
            exit 1
          fi

  test-error-cases:
    name: Test Error Cases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Test Invalid Operation
        id: invalid-op
        continue-on-error: true
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'invalid'
      
      - name: Verify Invalid Operation
        if: steps.invalid-op.outcome == 'success'
        run: |
          echo "Expected failure for invalid operation"
          exit 1
      
      - name: Test Update Without Content
        id: no-content
        continue-on-error: true
        uses: ./actions/core/manage_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          operation: 'update'
      
      - name: Verify No Content Error
        if: steps.no-content.outcome == 'success'
        run: |
          echo "Expected failure for update without content"
          exit 1